# Python-Module

Problem Description

You are given an array of N integers, A1, A2, …. AN.

Return the maximum value of f(i, j) for all 1 ≤ i, j ≤ N. f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.



Problem Constraints

1 <= N <= 100000

-109 <= A[i] <= 109



Input Format

First argument is an integer array A of size N.



Output Format

Return an integer denoting the maximum value of f(i, j).



Example Input

Input 1:

A = [1, 3, -1]
Input 2:

 
A = [2]


Example Output

Output 1:

5
Output 2:

0


Example Explanation

Explanation 1:

f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5

So, we return 5.
Explanation 2:

Only possibility is i = 1 and j = 1. That gives answer = 0.



<!-- Python code -->

class Solution:
    # @param A : list of integers
    # @return an integer
    def maxArr(self, A):
        n = len(A)
        '''Brute Force :
            n=len(A)
            if n>1:
                val = 0
                for i in range (0,n):
                    for j in range(i+1,n):
                        val = max(val, abs(A[i]-A[j]) + abs(i-j))
                return val
            else:
                return 0
                
            
<Now in optimised approach 
  by reducing repeatative steps occuring in expression/equaction i.e.
           |A[i] - A[j]| + |i - j| 
           modified to mod1 and mod2 by removing mod in equation and generalise to efficient equation 
        
        
        
        mod1 = [A[i] + i for i in range(n)] 
        mod2 = [A[i] - i for i in range(n)]
     in order to achieve max value
     you need left value as max and right value as min 
        return max(max(mod1) - min(mod1), max(mod2) - min(mod2))
